数位DP的题型往往是这样：
求出在给定区间 [A,B] 内，符合条件f(i) 的数 i 的个数。条件 f(i)一般与数的大小无关，而与数的组成有关
由于数是按位dp，数的大小对复杂度的影响很小，所以原本从A暴力枚举到B需要的时间会比较不理想
我们将A,B从字符串（或者数组）的角度来枚举，从左边的高位开始进行遍历，使用dfs来解决（因为每一步做的选择由前面一步决定，所以可以用dfs建立解空间树）
1.状态记录：
dfs需要记录哪些状态：
①当前枚举到了哪一位
②前一位的数字是多少
③当前位可以填的数字
④
（前面是否出现过前导零，下面没说，但是理解成下面的limit限制条件即可，有些题目不要求记录）
举个例子：假如我们要从 [0,1000]找任意相邻两数相等的数
显然 111,222,888等等是符合题意的数
但是我们发现右端点 1000 是四位数
因此我们搜索的起点是 0000 ，而三位数的记录都是 111,0222,0888 等等
而这种情况下如果我们直接找相邻位相等则 0000符合题意而 0111,0222,0888 都不符合题意了，所以我们要加一个前导0标记
如果当前位 lead=1 而且当前位也是0，那么当前位也是前导0， pos+1 继续搜；
如果当前位 lead=1 但当前位不是0，则本位作为当前数的最高位， pos+1 继续搜；（注意这次根据题意st或其他参数可能发生变化）

对于①②，可以利用字符串下标进行查找
对于③，以B="12345"为例子
那么如果当前位是最高位的下一位，那么当前位可以填的数字要保证整体不能超过12345，并且它由前面一位决定：
a.如果前一位为0，则当前位可以选0-9
b.如果前一位为1（也就是达到了上限），则当前为可以选0-2(也就是当前位置的上限范围内)

那么，可见位置cur有两种可能性：
(1) 如果cur前面已经有一位小于了B在它位置上的上限数字，那么cur可以选择0-9，例如113__，cur为3的下一位，因为前面已经在第二位时选择了1<上限2，
那么该位就可以选择0-9
(2) 如果cur前面的所有位都等于B在它位置上的上限数字，那么cur可以选择的范围就被缩小了，只能在它的上限范围内，例如123__cur前面所有位都等于上限数字的位
那么cur只能选择0-4了

那在dfs中，也就是前面的③，我们可以对每一层递归共同维护一个boolean变量limit，如果在cur时，limit=true，就表示cur前面的所有数字都达到了
上限，那么就采用(2);相反则采用(1)来决定cur的数字选择范围，一般在dfs中，我们就维护一个可选择范围的上限max_num即可，然后在[min_num,max_num]范围
内进行解空间树分支的扩展(在扩展之前就可以加入题目的条件限制进行扩展)，而limit的传递就取决于当前选择的是不是上限数字，
如果不是则limit=false，是的话limit还是跟上一位时的limit一样。
我们设这一位的标记为 limit，当前位能取到的最大值为 max_num ，则下一位的标记limit值就是 i==max_num && limit (i是枚举这一位填的数,
在[min_num,max_num]范围内)

数位dp其实是在记忆化搜索的框架下进行的，每当找到一种情况我们就可以这种情况记录下来，等到搜到后面遇到相同的情况时直接使用当前记录的值。
dp数组的下标表示的是一种状态，只要当前的状态和之前搜过的某个状态完全一样，我们就可以直接返回原来已经记录下来的dp值。
我们一般用DP数组dp[i][j][...]专门记录那些没有限制情况下的情况(这是因为dfs过程中这些没有限制（指枚举限制）的情况有很多是重复的)

举个例子：
假如我们找 [0,123456] 中符合某些条件的数

假如当我们搜到 1000__ 时，dfs从下返上来的数值就是当前位是第 5 位(此时limit=false) ,前一位是 0 时的方案种数
搜完这位会向上反(相当于回退到其他分支搜)，这时我们可以记录一下：当前位第 5 位,前一位是 0 时，有这么多种方案种数
当我们继续搜到 1010__ 时，我们发现当前状态又是搜到了当前位是第 5 位(此时limit=false), 并且上一位也是 0 的组合状态，这与我们之前记录的情况相同，
这样我们就可以不继续向下搜，直接把上次的dp值返回就行了。

接着上面的例子，范围 [0,123456]
如果我们搜到了 1234__ ，我们能不能直接返回之前记录的：当前第 5 位，前一位是 4 时的dp值？答案是否定的，因为当前位有限制

复杂度分析：
(1) limit为false，那么每一层递归不受限制，数字有0-9十种选择，转移复杂度为O(10)
(2) limit为true，那么每一层递归受数字位限制，转移复杂度为O(数字位上限)

所以，对于不同的题目，我们只需要修改dfs过程中的状态dp定义以及转移(条件跳转)即可
参考：https://www.luogu.com.cn/blog/virus2017/shuweidp
讲的比较清楚的：
https://www.bilibili.com/video/av27156563/





